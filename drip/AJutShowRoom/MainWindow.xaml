<Window x:Class="AJutShowRoom.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:AJutShowRoom"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:ajut_core_io="clr-namespace:AJut.IO;assembly=AJut.Core"
        xmlns:ajut="clr-namespace:AJut.UX;assembly=AJut.UX.WPF"
        xmlns:ajap="clr-namespace:AJut.UX.AttachedProperties;assembly=AJut.UX.WPF"
        xmlns:ajctrls="clr-namespace:AJut.UX.Controls;assembly=AJut.UX.WPF"
        xmlns:ajconv="clr-namespace:AJut.UX.Converters;assembly=AJut.UX.WPF"
        xmlns:ajdraw="clr-namespace:AJut.UX.Drawing;assembly=AJut.UX.WPF"
        xmlns:ajprop="clr-namespace:AJut.UX.PropertyInteraction;assembly=AJut.UX.WPF"
        Title="AJut: Show Room" Height="450" Width="800"
        x:Name="Self">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.DoStuffCommand}" Executed="DoStuff_OnExecuted"/>
    </Window.CommandBindings>
    <Window.Resources>
        <ObjectDataProvider x:Key="eChildWindowAction" MethodName="GetNames" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="{x:Type ajut:eChildWindowAction}"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <PathGeometry x:Key="PathInfo" Figures="m 307.73449 15.812635 c 0 0 -26.00956 177.584115 -259.291669 177.648805 C -182.23165 193.52544 -212.36075 15.812635 -212.36075 15.812635" />
    </Window.Resources>
    <Grid>
        <TabControl>
            <TabItem Header="Full Screen">
                <StackPanel>
                    <ToggleButton Grid.Row="1" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=(ajap:WindowXTA.IsFullscreen)}" Content="Toggle Fullscreen"
                                  Width="200" Height="30" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Create Custom Chrome Window" Click="CreateCustomChromeWindow_OnClick"/>
                        <TextBlock Margin="5,0,0,0" Text="Show window with custom chrome that uses the WindowChromeButtonStrip, the maximize helper, and allows fullscreen!"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Gif">
                <StackPanel>
                    <ToggleButton Grid.Row="1" Padding="5">
                        <Border BorderThickness="3" BorderBrush="Black">
                            <Image x:Name="GifDisplay" Height="250"
                               ajap:Gif.Path="pack://application:,,,/AJutShowRoom;component/FreeGif.gif"
                               ajap:Gif.IsPlaying="{Binding Path=IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}, Mode=TwoWay}"
                               ajap:Gif.OverrideIsLooping="False"/>
                        </Border>
                    </ToggleButton>
                    <TextBlock Grid.Row="1" Text="{Binding ElementName=GifDisplay, Path=(ajap:Gif.CurrentFrameIndex), StringFormat='Frame #{0}'}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="Toggle Strip">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
                    <StackPanel HorizontalAlignment="Left" Margin="5" VerticalAlignment="Top">
                        <ajctrls:ToggleStrip Margin="0,0,0,5" >
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>Plain</sys:String>
                                    <sys:String>Toggle</sys:String>
                                    <sys:String>Strip</sys:String>
                                    <sys:String>No</sys:String>
                                    <sys:String>Formatting</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" >
                            <ajctrls:ToggleStrip.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                    <GradientStop Offset="0.00" Color="#FFFFFF" />
                                    <GradientStop Offset="0.10" Color="#D5D5D5" />
                                    <GradientStop Offset="0.90" Color="#898989" />
                                    <GradientStop Offset="1.00" Color="#202020" />
                                </LinearGradientBrush>
                            </ajctrls:ToggleStrip.Background>
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>One</sys:String>
                                    <sys:String>With</sys:String>
                                    <sys:String>Fancy</sys:String>
                                    <sys:String>Background</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" ajap:BorderXTA.CornerRadius="10" ToolTip="Use the attached property BorderXTA.CornerRadius">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>One</sys:String>
                                    <sys:String>With</sys:String>
                                    <sys:String>Corner</sys:String>
                                    <sys:String>Radius</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" HorizontalContentAlignment="Stretch"
                                      ToolTip="Simply set HorizontalContentAlignment to Stretch">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>One</sys:String>
                                    <sys:String>That</sys:String>
                                    <sys:String>Stretches</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" AllowMultiSelect="True">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>One</sys:String>
                                    <sys:String>That</sys:String>
                                    <sys:String>Allows</sys:String>
                                    <sys:String>Multiselect</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" AllowNoSelection="True">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>One</sys:String>
                                    <sys:String>That</sys:String>
                                    <sys:String>Allows</sys:String>
                                    <sys:String>Nothing</sys:String>
                                    <sys:String>Selected</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" AllowMultiSelect="True" AllowNoSelection="True">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>One</sys:String>
                                    <sys:String>That</sys:String>
                                    <sys:String>Allows</sys:String>
                                    <sys:String>Multiselect</sys:String>
                                    <sys:String>-and-</sys:String>
                                    <sys:String>Nothing</sys:String>
                                    <sys:String>Selected</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" AllowNoSelection="True">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>Single Item</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <Grid>
                            <ajctrls:ToggleStrip x:Name="EmptyOne" HorizontalContentAlignment="Stretch"/>
                            <TextBlock Text="No Items: TextBlock not part of ToggleStrip - Bind to HasItems" Opacity="0.5" HorizontalAlignment="Center" FontStyle="Italic"
                                   Visibility="{Binding ElementName=EmptyOne, Path=HasItems, Converter={ajconv:BooleanToVisibilityConverter TrueValue=Collapsed, FalseValue=Visible}}"
                                   Margin="3"/>
                        </Grid>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" BackgroundPressedColorBase="#880101" BackgroundHover="Red">
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>Custom</sys:String>
                                    <sys:String>Item</sys:String>
                                    <sys:String>Background</sys:String>
                                    <sys:String>Brushes</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                        <ajctrls:ToggleStrip Margin="0,0,0,5" Width="700" HorizontalContentAlignment="Stretch"
                                          AllowMultiSelect="True" AllowNoSelection="True"
                                          Background="#808080"
                                          BackgroundHover="#DF00"
                                          BackgroundPressedColorBase="#CC880101" 
                                          BorderThickness="5"
                                          BorderBrush="Black"
                                          SeparatorBrush="#260101"
                                          SeparatorThickness="2"
                                          Foreground="#999"
                                          ForegroundHover="#FFF"
                                          ForegroundPressed="#CFFF"
                                          ItemPadding="20,10"
                                          ajap:BorderXTA.CornerRadius="0,15,0,15"
                                          FontSize="22">
                            <ajctrls:ToggleStrip.BackgroundHoverOverPressed>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0.0" Color="#260101" />
                                    <GradientStop Offset="0.3" Color="#DF00" />
                                    <GradientStop Offset="1" Color="#DF00" />
                                </LinearGradientBrush>
                            </ajctrls:ToggleStrip.BackgroundHoverOverPressed>
                            <ajctrls:ToggleStrip.ItemsSource>
                                <x:Array Type="{x:Type sys:String}">
                                    <sys:String>Mix</sys:String>
                                    <sys:String>Of</sys:String>
                                    <sys:String>All</sys:String>
                                    <sys:String>Styles</sys:String>
                                </x:Array>
                            </ajctrls:ToggleStrip.ItemsSource>
                        </ajctrls:ToggleStrip>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Flat Tree">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <GroupBox Header="Tests" Margin="5">
                        <WrapPanel Margin="5,5,0,0">
                            <Button Content="Synch Selection" Margin="0,0,5,5" Click="SynchFlatTreeListSelection_OnClick"/>
                            <Button Content="Add Node To Selected (top)" Margin="0,0,5,5" Click="AddNodeToTopSelected_OnClick"/>
                            <Button Content="Test external selection (select first)" Margin="0,0,5,5" Click="FlatTreeList_OnTestExternalSelectionClick"/>
                            <Button Content="Test external selection (clear all)" Margin="0,0,5,5" Click="FlatTreeList_OnTestExternalSelectionClearAllClick"/>
                        </WrapPanel>
                    </GroupBox>
                    <ajctrls:FlatTreeListControl x:Name="TopTree" Grid.Row="1" RootItemsSource="{Binding ElementName=Self, Path=Items}"
                                              TabbingSize="10" StorageItemAdded="FlatTree_OnItemAdded">
                        <ajctrls:FlatTreeListControl.Resources>
                            <DataTemplate DataType="{x:Type local:TestTreeItem}">
                                <DockPanel>
                                    <CheckBox DockPanel.Dock="Right" IsChecked="{Binding OtherThing}" />
                                    <TextBlock Text="{Binding Title}" Loaded="Test_Loaded"/>
                                </DockPanel>
                            </DataTemplate>
                        </ajctrls:FlatTreeListControl.Resources>
                    </ajctrls:FlatTreeListControl>
                    <ajctrls:FlatTreeListControl x:Name="BottomTree" Grid.Row="2" Root="{Binding ElementName=Self, Path=Items[2]}"
                                              TabbingSize="20">
                        <ajctrls:FlatTreeListControl.Resources>
                            <DataTemplate DataType="{x:Type local:TestTreeItem}">
                                <DockPanel>
                                    <CheckBox DockPanel.Dock="Right" IsChecked="{Binding OtherThing}" />
                                    <TextBlock Text="{Binding Title}" Loaded="Test_Loaded"/>
                                </DockPanel>
                            </DataTemplate>
                        </ajctrls:FlatTreeListControl.Resources>
                    </ajctrls:FlatTreeListControl>
                </Grid>
            </TabItem>
            <TabItem Header="DrawingArea">
                <DockPanel x:Name="DrawingOn" Background="#1FFF" ajdraw:DrawingInputSpawner.IsInDrawingMode="{Binding ElementName=DrawController, Path=IsChecked, Mode=TwoWay}"
                           ajdraw:DrawingInputSpawner.DrawingCreated="DrawingDisplayer_OnDrawingCreated">
                    <Border DockPanel.Dock="Bottom" BorderThickness="0,2,0,0" BorderBrush="Black">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="DrawController" Content="Draw" VerticalAlignment="Center" Margin="2"/>
                            <Border Margin="5,0" BorderThickness="1,0,0,0" BorderBrush="Black"/>
                            <TextBlock Text="Color" VerticalAlignment="Center" Margin="2"/>
                            <ajctrls:ColorEditIngressControl x:Name="PathDisplayColor" EditColor="#F00" Width="30" Height="30"/>
                            <Border Margin="5,0" BorderThickness="1,0,0,0" BorderBrush="Black"/>
                            <TextBlock Text="Segment Size" VerticalAlignment="Center" Margin="2"/>
                            <TextBox Text="{Binding ElementName=DrawingOn, Path=(ajdraw:DrawingInputSpawner.SegmentSize), Mode=TwoWay}" MinWidth="50" VerticalAlignment="Center"/>
                            <Border Margin="5,0" BorderThickness="1,0,0,0" BorderBrush="Black"/>
                            <TextBlock Text="Small Movement Threshold" VerticalAlignment="Center" Margin="2"/>
                            <TextBox Text="{Binding ElementName=DrawingOn, Path=(ajdraw:DrawingInputSpawner.SmallMovementThreshold), Mode=TwoWay}" MinWidth="50" VerticalAlignment="Center"/>
                            <Border Margin="5,0" BorderThickness="1,0,0,0" BorderBrush="Black"/>
                            <TextBlock Text="Source: " VerticalAlignment="Center" Margin="2"/>
                            <TextBlock Text="{Binding ElementName=DrawingOn, Path=(ajdraw:DrawingInputSpawner.CurrentDrawingSource), Mode=OneWay}" MinWidth="50" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <Canvas x:Name="DrawingDisplayer" ClipToBounds="True">
                        <Viewbox Stretch="None">
                            <Path StrokeThickness="2"
                                  Data="{Binding ElementName=DrawingOn, Path=(ajdraw:DrawingInputSpawner.PathInProgress).Geometry}">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{Binding ElementName=PathDisplayColor, Path=EditColor}"/>
                                </Path.Stroke>
                            </Path>
                        </Viewbox>
                    </Canvas>
                </DockPanel>
            </TabItem>
            <TabItem Header="Tracked Windows">
                <DockPanel>
                    <GroupBox Header="Show\Hide Children When" DockPanel.Dock="Top">
                        <!--<ajut:ToggleStrip DockPanel.Dock="Top" ItemsSource="{Binding Source={StaticResource eChildWindowAction}}"
                                          SelectedItem="{Binding ElementName=Self, Path=ToolWindows.ShowHideChildrenWhen, Mode=TwoWay}"
                                          HorizontalAlignment="Center">
                            <ajut:ToggleStrip.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={ajc:FriendlyTextEnConverter}}"/>
                                </DataTemplate>
                            </ajut:ToggleStrip.ItemTemplate>
                        </ajut:ToggleStrip>-->
                    </GroupBox>
                    <StackPanel Orientation="Horizontal"  DockPanel.Dock="Top">
                        <Button Content="Manually Show All" Click="ShowAllToolWindows_OnClick"/>
                        <Button Content="Manually Hide All" Click="HideAllToolWindows_OnClick"/>
                    </StackPanel>
                    <ListBox x:Name="ToolWindowDisplayList" ItemsSource="{Binding ElementName=Self, Path=ToolWindows}"
                             MouseDoubleClick="WindowList_OnDoubleClick">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Title}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </TabItem>
            <TabItem Header="DPWatcher: Works">
                <StackPanel>
                    <TextBox x:Name="TextBoxToStalk"/>
                    <TextBox Text="{Binding ElementName=TextBoxToStalk, Path=Text, Mode=TwoWay}"/>
                    <TextBlock Text="{Binding ElementName=Self, Path=WatchedValueCounter}"/>
                    <Button Content="Start Watching" Click="StartWatchingWithDPWatcher_OnClick"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="EditableTextBlock">
                <DockPanel>
                    <GroupBox Header="Params">
                        <WrapPanel>
                            <CheckBox x:Name="EditTextController" Content="Is Editing"/>
                            <CheckBox x:Name="ReadonlyTextController" Content="Is Readonly"/>
                            <TextBox Text="{Binding ElementName=Self, Path=EditTextBlockText, Mode=TwoWay}"/>
                        </WrapPanel>
                    </GroupBox>
                    <ajctrls:EditableTextBlock IsEditing="{Binding ElementName=EditTextController, Path=IsChecked, Mode=TwoWay}"
                                            IsReadOnly="{Binding ElementName=ReadonlyTextController, Path=IsChecked}"
                                            Text="{Binding ElementName=Self, Path=EditTextBlockText, Mode=TwoWay}"
                                            VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                            FontSize="32" Foreground="CornflowerBlue" FontWeight="Bold" FontStretch="ExtraCondensed"
                                            EditTextInitializationBehavior="SelectAll"
                                            EditTextInstagatorAction="MouseOver">
                        <ajctrls:EditableTextBlock.Effect>
                            <DropShadowEffect BlurRadius="3" Color="#202020" Opacity="0.8"/>
                        </ajctrls:EditableTextBlock.Effect>
                    </ajctrls:EditableTextBlock>
                </DockPanel>
            </TabItem>
            <TabItem Header="Numeric Up Down">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Width="350">
                    <DockPanel >
                        <TextBox Text="Example" VerticalAlignment="Center"/>
                        <ajctrls:NumericEditor Margin="10,0" Foreground="Black" Value="{Binding ElementName=Self, Path=FloatValue}" Padding="1"
                                            VerticalContentAlignment="Stretch"/>
                    </DockPanel>

                    <ajctrls:NumericEditor Margin="10" Foreground="Black" Value="{Binding ElementName=Self, Path=FloatValue}" LabelButtonDock="Bottom" LabelPadding="5,10" Width="50"/>
                    <StackPanel Orientation="Horizontal">
                        <ajctrls:NumericEditor Margin="10" Padding="2,5" Minimum="{Binding ElementName=Self, Path=FloatValue}" Width="80">
                            <ajctrls:NumericEditor.LabelContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="X" Foreground="Red" FontWeight="Thin" Margin="5,0" VerticalAlignment="Center" FontSize="22" FontFamily="Segoe UI"/>
                                </DataTemplate>
                            </ajctrls:NumericEditor.LabelContentTemplate>
                        </ajctrls:NumericEditor>
                        <ajctrls:NumericEditor Margin="10" Padding="2,5" Minimum="{Binding ElementName=Self, Path=FloatValue}" Width="80">
                            <ajctrls:NumericEditor.LabelContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Y" Foreground="Green" FontWeight="Thin" Margin="5,0" VerticalAlignment="Center" FontSize="22" FontFamily="Segoe UI"/>
                                </DataTemplate>
                            </ajctrls:NumericEditor.LabelContentTemplate>
                        </ajctrls:NumericEditor>
                        <ajctrls:NumericEditor Margin="10" Padding="2,5" Minimum="{Binding ElementName=Self, Path=FloatValue}" Width="80">
                            <ajctrls:NumericEditor.LabelContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="Z" Foreground="DarkBlue" FontWeight="Thin" Margin="5,0" VerticalAlignment="Center" FontSize="22" FontFamily="Segoe UI"/>
                                </DataTemplate>
                            </ajctrls:NumericEditor.LabelContentTemplate>
                        </ajctrls:NumericEditor>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Extensions">
                <StackPanel>
                    <Grid Background="Black" ajap:ClickableXTA.IsTrackingClick="True" 
                          ajap:ClickableXTA.AcceptsMouseSecondaryButton="True"
                          ajap:ClickableXTA.Click="ExtensionGrid_OnClick">
                        <TextBlock Text="Click this" Foreground="White"/>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Bump Stack">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" Text="Horizontal"/>
                    <ajctrls:BumpStack DockPanel.Dock="Top" Orientation="Horizontal" BumpInterval="10"
                                    InvertMouseWheel="True"
                                    ButtonFontSize="22">
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,5,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                    </ajctrls:BumpStack>
                    <TextBlock DockPanel.Dock="Top" Text="Vertical"/>
                    <ajctrls:BumpStack Orientation="Vertical" HorizontalAlignment="Left" Width="100" BumpInterval="18"
                                    ButtonFontSize="32" EdgeClearanceOffset="10">
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,5" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                        <Border Margin="0,0,0,0" Background="#CCC" BorderBrush="Green" BorderThickness="1">
                            <TextBlock Text="Thing" Margin="10" FontSize="18"/>
                        </Border>
                    </ajctrls:BumpStack>
                </DockPanel>
            </TabItem>
            <TabItem Header="Property Grid">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TabControl>
                        <TabItem Header="Multi Source">
                            <ajctrls:PropertyGrid ItemsSource="{Binding ElementName=PropGridSelectionOptions, Path=SelectedItems}" BorderThickness="3" BorderBrush="#202020" Margin="20" Background="#1000"
                                       HorizontalContentAlignment="Stretch">
                                <ajctrls:PropertyGrid.ItemTemplateSelector>
                                    <ajctrls:PropertyGridTemplateSelector>
                                        <ajctrls:PropertyGridTemplateSelector.RegisteredTemplates>
                                            <DataTemplate x:Key="Text" DataType="{x:Type ajprop:PropertyEditTarget}">
                                                <ajctrls:EditableTextBlock Text="{Binding Path=EditValue, Mode=TwoWay}" FontSize="16"/>
                                            </DataTemplate>
                                            <DataTemplate x:Key="Number" DataType="{x:Type ajprop:PropertyEditTarget}">
                                                <ajctrls:NumericEditor Value="{Binding Path=EditValue, Mode=TwoWay}"
                                                                       Minimum="{Binding Path=EditContext.Minimum, FallbackValue=0}"
                                                                       Maximum="{Binding Path=EditContext.Maximum, FallbackValue=100}"
                                                                       NumberTextAlignment="Left"/>
                                            </DataTemplate>
                                        </ajctrls:PropertyGridTemplateSelector.RegisteredTemplates>
                                        <ajctrls:PropertyGridTemplateSelector.Default>
                                            <DataTemplate DataType="{x:Type ajprop:PropertyEditTarget}">
                                                <TextBlock Text="{Binding Path=EditValue}"/>
                                            </DataTemplate>
                                        </ajctrls:PropertyGridTemplateSelector.Default>
                                    </ajctrls:PropertyGridTemplateSelector>

                                </ajctrls:PropertyGrid.ItemTemplateSelector>
                            </ajctrls:PropertyGrid>
                        </TabItem>
                        <TabItem Header="Single Source">
                            <ajctrls:PropertyGrid SingleItemSource="{Binding ElementName=PropGridSelectionOptions, Path=SelectedItem}" BorderThickness="3" BorderBrush="#202020" Margin="20" Background="#1000"
                                       HorizontalContentAlignment="Stretch">
                                <ajctrls:PropertyGrid.ItemTemplateSelector>
                                    <ajctrls:PropertyGridTemplateSelector>
                                        <ajctrls:PropertyGridTemplateSelector.RegisteredTemplates>
                                            <DataTemplate x:Key="Text" DataType="{x:Type ajprop:PropertyEditTarget}">
                                                <ajctrls:EditableTextBlock Text="{Binding Path=EditValue, Mode=TwoWay}" FontSize="16"/>
                                            </DataTemplate>
                                            <DataTemplate x:Key="Number" DataType="{x:Type ajprop:PropertyEditTarget}">
                                                <ajctrls:NumericEditor Value="{Binding Path=EditValue, Mode=TwoWay}"
                                                            Minimum="{Binding Path=EditContext.Minimum, FallbackValue=0}"
                                                            Maximum="{Binding Path=EditContext.Maximum, FallbackValue=100}"
                                                            NumberTextAlignment="Left"/>
                                            </DataTemplate>
                                        </ajctrls:PropertyGridTemplateSelector.RegisteredTemplates>
                                        <ajctrls:PropertyGridTemplateSelector.Default>
                                            <DataTemplate DataType="{x:Type ajprop:PropertyEditTarget}">
                                                <TextBlock Text="{Binding Path=EditValue}"/>
                                            </DataTemplate>
                                        </ajctrls:PropertyGridTemplateSelector.Default>
                                    </ajctrls:PropertyGridTemplateSelector>

                                </ajctrls:PropertyGrid.ItemTemplateSelector>
                            </ajctrls:PropertyGrid>
                        </TabItem>
                    </TabControl>

                    <ListBox x:Name="PropGridSelectionOptions" Grid.Column="1"
                             ItemsSource="{Binding ElementName=Self, Path=PropertyGridItems}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>
                                        <TextBlock.Inlines>
                                            <Run Text="{Binding Path=DogsName}"/>
                                            <Run Text=": "/>
                                            <Run Text="{Binding Path=DogsAge}"/>
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                    <Button Content="Set age" Click="SetDogAge_OnClick"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </TabItem>
            <TabItem Header="Enum ComboBox">
                <DockPanel>
                    <Border DockPanel.Dock="Bottom" x:Name="EditLocationBorder" BorderBrush="Black" BorderThickness="1" Background="Red">
                        <StackPanel Margin="60" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Text="Variable Location"/>
                            <ajctrls:EnumComboBox SelectedItem="{Binding ElementName=EditLocationBorder, Path=(DockPanel.Dock), Mode=TwoWay}"/>
                        </StackPanel>
                    </Border>
                    <Border DockPanel.Dock="Left"  BorderBrush="Black" BorderThickness="1" Background="Green">
                        <TextBlock Text="Left" Margin="60" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <Border DockPanel.Dock="Right"  BorderBrush="Black" BorderThickness="1" Background="IndianRed">
                        <TextBlock Text="Right" Margin="60" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <Border BorderBrush="Black" BorderThickness="1" Background="Blue">
                        <TextBlock Text="Fill" Margin="60" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </DockPanel>
            </TabItem>
            <TabItem Header="Color Control">
                <Grid>
                    <Grid.Background>
                        <SolidColorBrush Color="{Binding ElementName=Self, Path=ColorValue}"/>
                    </Grid.Background>
                    <StackPanel>
                        <WrapPanel>
                            <ajctrls:ColorEditIngressControl EditColor="Green" Width="45" Height="45" Padding="4" PreferShortStringHex="True" Margin="0,0,5,5"/>
                            <ajctrls:ColorEditIngressControl EditColor="Purple" Width="45" Height="45" Padding="2" PreferShortStringHex="True" IsReadOnly="True" Margin="0,0,5,5"/>

                            <ajctrls:ColorEditIngressControl EditColor="Green" Width="20" Height="20" Padding="2" PreferShortStringHex="True" Margin="0,0,5,5"
                                                          CornerBannerDimensions="27" CornerBannerIconFontSize="10"/>
                            <ajctrls:ColorEditIngressControl EditColor="Purple" Width="140" Height="140" Padding="10" PreferShortStringHex="True" IsReadOnly="True" Margin="0,0,5,5"
                                                          CornerBannerDimensions="60" CornerBannerIconFontSize="20"/>
                        </WrapPanel>
                        <ajctrls:ColorValueEditControl Background="#D32" HorizontalAlignment="Center"
                            EditColor="{Binding ElementName=Self, Path=ColorValue, Mode=TwoWay}"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Docking Framework" IsSelected="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Margin="0,0,1,0">
                        <ajctrls:DockZone x:Name="LeftDockZone" GroupId="MainWindowTestDocking"/>
                    </Border>
                    <Grid Background="#202020" Grid.Column="1" Margin="1,0">
                        <StackPanel VerticalAlignment="Center">
                            <TextBlock Foreground="White" TextWrapping="WrapWithOverflow" TextAlignment="Center" Margin="5"
                                       Text="Docking zones to the left and right - this is the undockable part."/>
                            <TextBlock Foreground="White" TextWrapping="WrapWithOverflow" TextAlignment="Center" Margin="5,20,5,5" FontWeight="Bold"
                                       Text="Things to do here:"/>
                            <TextBlock Foreground="White" TextWrapping="WrapWithOverflow" TextAlignment="Center" Margin="5"
                                       Text="• Undock by dragging from the header (tabbed or single) to tear off"/>
                            <TextBlock Foreground="White" TextWrapping="WrapWithOverflow" TextAlignment="Center" Margin="5"
                                       Text="• Close individual controls via the X in the header (tabbed or single)"/>
                            <TextBlock Foreground="White" TextWrapping="WrapWithOverflow" TextAlignment="Center" Margin="5"
                                       Text="• Drop"/>
                            <CheckBox Content="Hide tool windows when none have focus" Foreground="Wheat" HorizontalAlignment="Center"/>
                            <Button>Save Dock Layout</Button>
                            <Button>Reset to Default Dock Layout</Button>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="2" Margin="1,0,0,0">
                        <ajctrls:DockZone x:Name="RightDockZone" GroupId="MainWindowTestDocking"/>
                    </Border>

                    <GridSplitter Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                  Width="2" Margin="0,0,-1,0"/>
                    <GridSplitter Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Stretch"
                                  Width="2" Margin="-1,0,0,0"/>
                </Grid>
            </TabItem>
            <TabItem Header="Reorder">
                <WrapPanel>
                    <Grid ajap:DragWatch.IsEnabled="True">
                        <Grid.Resources>

                            <Style TargetType="{x:Type Border}">
                                <Setter Property="IsHitTestVisible" Value="True"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <GradientStop Offset="0.00" Color="#FFFFFF" />
                                            <GradientStop Offset="0.50" Color="#109DD3" />
                                            <GradientStop Offset="1.00" Color="#FFFFFF" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(ajut:DragDropElement.IsDragging)}" Value="True">
                                        <Setter Property="BorderThickness" Value="3"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.CommandBindings>
                            <CommandBinding Command="{x:Static ajut:DragDropElement.DragInitiatedCommand}" Executed="DoReorder_OnExecuted"/>
                        </Grid.CommandBindings>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="75"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="200"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Grid.Row="0"  Background="Red"   />
                        <Border Grid.Column="0" Grid.Row="1"  Background="Green" />
                        <Border Grid.Column="0" Grid.Row="2"  Background="Blue"  />
                        <Border Grid.Column="1" Grid.Row="0"  Background="Yellow"/>
                        <Border Grid.Column="1" Grid.Row="1"  Background="Pink"  />
                        <Border Grid.Column="1" Grid.Row="2"  Background="Purple"/>
                    </Grid>
                </WrapPanel>
            </TabItem>
            <TabItem Header="IO - Path Selection Control">
                <StackPanel>
                    <ajctrls:PathSelectionControl  VerticalAlignment="Center" MaxWidth="300" PathType="{Binding ElementName=PathType, Path=SelectedItem}"
                                                FileFilter="{Binding ElementName=FileFilter, Path=Text, UpdateSourceTrigger=PropertyChanged}"
                                                TreatNonExistentPathAsInvalid="{Binding ElementName=NonExistant, Path=IsChecked}"
                                                TreatEmptyPathAsInvalid="{Binding ElementName=EmptyAsError, Path=IsChecked}"
                                                UnsetTextPrompt="Select a path"/>
                    <StackPanel>
                        <CheckBox x:Name="NonExistant" Content="Treat Non-existant as error" Margin="0,0,5,5" VerticalAlignment="Center"/>
                        <CheckBox x:Name="EmptyAsError" Content="Treat empty as error" Margin="0,0,5,5" VerticalAlignment="Center"/>
                        <ajctrls:EnumComboBox x:Name="PathType" SelectedItem="{x:Static ajctrls:ePathType.File}" Margin="0,0,5,5" VerticalAlignment="Center"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Filter" VerticalAlignment="Center"/>
                            <TextBox x:Name="FileFilter" Text="{Binding Source={x:Static ajut_core_io:ImageTypes.AnyOrAllImageTypeFilter}, Mode=OneTime}" MaxWidth="300" VerticalAlignment="Center"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="BusyWait">
                <Grid>
                    <ajctrls:BusyWait Content="A busy wait" SpinnerDock="Right"
                                   VerticalAlignment="Center"  HorizontalAlignment="Left"/>
                </Grid>
            </TabItem>
            <TabItem Header="Svg">
                <Grid>
                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,18" MappingMode="Absolute" SpreadMethod="Reflect" Opacity="0.3">
                            <GradientStop Offset="0.00" Color="#181818" />
                            <GradientStop Offset="0.10" Color="#181818" />
                            <GradientStop Offset="0.10" Color="#00181818" />
                            <GradientStop Offset="0.90" Color="#00181818" />
                            <GradientStop Offset="0.90" Color="#181818" />
                            <GradientStop Offset="1.00" Color="#181818" />
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">

                        <Border BorderThickness="3" CornerRadius="5" BorderBrush="Black" Background="#E4F7FF" RenderTransformOrigin="0.55,0.55">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <StackPanel>
                                <Image Width="300" Source="PenguinExample.png" Margin="5" />
                                <TextBlock Text="Image Version (png)"/>
                            </StackPanel>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.5" >
                                                    <EasingDoubleKeyFrame Value="15.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.5" >
                                                    <EasingDoubleKeyFrame Value="5.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)" Duration="0:0:0.5" >
                                                    <EasingInt32KeyFrame Value="5">
                                                        <EasingInt32KeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingInt32KeyFrame.EasingFunction>
                                                    </EasingInt32KeyFrame>
                                                </Int32AnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.3" >
                                                    <EasingDoubleKeyFrame Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.3" >
                                                    <EasingDoubleKeyFrame Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)" Duration="0:0:0.5" >
                                                    <EasingInt32KeyFrame Value="0">
                                                        <EasingInt32KeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingInt32KeyFrame.EasingFunction>
                                                    </EasingInt32KeyFrame>
                                                </Int32AnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>

                        <Border BorderThickness="3" CornerRadius="5" BorderBrush="Black" Background="#E4F7FF" RenderTransformOrigin="0.55,0.55">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <StackPanel>
                                <Viewbox Width="300" Margin="5">
                                    <ajctrls:Svg Source="PenguinExample.svg"/>
                                </Viewbox>
                                <TextBlock Text="Vector Version (svg)"/>
                            </StackPanel>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.5" >
                                                    <EasingDoubleKeyFrame Value="15.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.5" >
                                                    <EasingDoubleKeyFrame Value="5.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.3" >
                                                    <EasingDoubleKeyFrame Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.3" >
                                                    <EasingDoubleKeyFrame Value="1.0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <SineEase />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>

                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="PopupMenuButton" DataContext="random text">
                <ajctrls:PopupMenuButton ButtonContent="Click to open context menu" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="30" Width="500">
                    <MenuItem Header="Test 1" Click="Test1_OnClick"/>
                    <MenuItem Header="Test 2"/>
                </ajctrls:PopupMenuButton>
            </TabItem>
            <TabItem Header="Stack Nav">
                <Grid  HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0">
                        <TextBlock FontSize="22" TextWrapping="WrapWithOverflow">
                            <TextBlock.Inlines>
                                <Run Text="The below is a stack nav. All stack navs will use the "/>
                                <Run Text="StackNavFlowController" FontWeight="Bold" Foreground="Blue"/>
                                <Run Text=" as an entry point, and optionally you may use the header/drawer/content ui helpers to build your views faster - or you can have your own displays render the "/>
                                <Run Text="StackNavFlowController" FontWeight="Bold" Foreground="Blue"/>
                                <Run Text=" and "/>
                                <Run Text="StackNavAdapter" FontWeight="Bold" Foreground="Blue"/>
                                <Run Text=" more directly!"/>
                            </TextBlock.Inlines>
                        </TextBlock>
                        <CheckBox x:Name="ShowMockLeft" Content="Show fixed leftside prefix"/>
                        <CheckBox x:Name="ShowMockRight" Content="Show WindowChromeButtonStrip"/>
                        <CheckBox x:Name="ShowDrawerButtton" Content="Show Drawer Display"/>
                        <CheckBox x:Name="ShowVersionDisplayAtBottom" Content="Show Version in Drawer display" IsChecked="True"/>
                    </StackPanel>
                    <DockPanel Grid.Row="1" Margin="20">
                        <TextBlock DockPanel.Dock="Top" Text="Stack Nav Area ↓" FontSize="19"/>
                        <ajctrls:StackNavDisplay Navigator="{Binding ElementName=Self, Path=Navigator}" FixedDrawerWidth="300">
                            <ajctrls:StackNavDisplay.Resources>
                                <Style TargetType="{x:Type ajctrls:StackNavActiveDrawerPresenter}">
                                    <Setter Property="AdditionalBottomDisplay">
                                        <Setter.Value>
                                            <TextBlock Text="Fake Version 1.0.2" FontStyle="Italic" Opacity="0.6" 
                                                       Visibility="{Binding ElementName=ShowVersionDisplayAtBottom, Path=IsChecked, Mode=OneWay, Converter={ajconv:BooleanToVisibilityConverter}}" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style TargetType="{x:Type ajctrls:StackNavActiveHeaderPresenter}">
                                    <Setter Property="ShowDrawerButton" Value="{Binding ElementName=ShowDrawerButtton, Path=IsChecked}" />
                                    <Setter Property="AdditionalLeftSideDisplay">
                                        <Setter.Value>
                                            <TextBlock Text="Show Room:" VerticalAlignment="Center" FontWeight="Bold" FontSize="22" Margin="0,0,10,0"
                                                       Visibility="{Binding ElementName=ShowMockLeft, Path=IsChecked, Converter={ajconv:BooleanToVisibilityConverter}}"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="AdditionalRightSideDisplay">
                                        <Setter.Value>
                                            <ajctrls:WindowChromeButtonStrip Visibility="{Binding ElementName=ShowMockRight, Path=IsChecked, Converter={ajconv:BooleanToVisibilityConverter}}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ajctrls:StackNavDisplay.Resources>
                        </ajctrls:StackNavDisplay>
                    </DockPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
