<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ajut="clr-namespace:AJut.UX"
                    xmlns:local="clr-namespace:AJut.UX.Controls"
                    xmlns:ajc="clr-namespace:AJut.UX.Converters"
                    xmlns:docking="clr-namespace:AJut.UX.Docking">

    <ControlTemplate x:Key="CONTROLTEMPLATE_VerticalDockZone" TargetType="{x:Type local:DockZone}">
        <Border TextElement.Foreground="{TemplateBinding PanelForeground}"
                CornerRadius="{TemplateBinding PanelCornerRadius}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition>
                        <RowDefinition.MinHeight>
                            <MultiBinding Converter="{ajc:ArithmeticConverter Operation=Add}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="AnteriorZone.MinHeight"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                            </MultiBinding>
                        </RowDefinition.MinHeight>
                    </RowDefinition>
                    <RowDefinition>
                        <RowDefinition.MinHeight>
                            <MultiBinding Converter="{ajc:ArithmeticConverter Operation=Add}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="PosteriorZone.MinHeight"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                            </MultiBinding>
                        </RowDefinition.MinHeight>
                    </RowDefinition>
                </Grid.RowDefinitions>
                <ContentControl Grid.Row="0" Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=AnteriorZone}"
                                Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=AnteriorSize, Mode=TwoWay}">
                    <ContentControl.Margin>
                        <ajut:ThicknessBuilder BindingParts="Bottom">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                        </ajut:ThicknessBuilder>
                    </ContentControl.Margin>
                </ContentControl>
                <ContentControl Grid.Row="1" Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=PosteriorZone}">
                    <ContentControl.Margin>
                        <ajut:ThicknessBuilder BindingParts="Top">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                        </ajut:ThicknessBuilder>
                    </ContentControl.Margin>
                </ContentControl>
                <GridSplitter Grid.Row="1" Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=SeparationSize}"
                              VerticalAlignment="Top" HorizontalAlignment="Stretch"
                              Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=SeparatorBrush}">
                    <GridSplitter.Margin>
                        <ajut:ThicknessBuilder BindingParts="Top">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize" Converter="{ajc:FixedArithmeticConverter Operation=Multiply, FixedOperand=-1}"/>
                        </ajut:ThicknessBuilder>
                    </GridSplitter.Margin>
                </GridSplitter>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="CONTROLTEMPLATE_HorizontalDockZone" TargetType="{x:Type local:DockZone}">
        <Border TextElement.Foreground="{TemplateBinding PanelForeground}"
                CornerRadius="{TemplateBinding PanelCornerRadius}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>
                        <ColumnDefinition.MinWidth>
                            <MultiBinding Converter="{ajc:ArithmeticConverter Operation=Add}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="AnteriorZone.MinWidth"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                            </MultiBinding>
                        </ColumnDefinition.MinWidth>
                    </ColumnDefinition>
                    <ColumnDefinition>
                        <ColumnDefinition.MinWidth>
                            <MultiBinding Converter="{ajc:ArithmeticConverter Operation=Add}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="PosteriorZone.MinWidth"/>
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                            </MultiBinding>
                        </ColumnDefinition.MinWidth>
                    </ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0" Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=AnteriorZone}">
                    <ContentControl.Margin>
                        <ajut:ThicknessBuilder BindingParts="Right">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                        </ajut:ThicknessBuilder>
                    </ContentControl.Margin>
                </ContentControl>
                <ContentControl Grid.Column="1" Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=PosteriorZone}">
                    <ContentControl.Margin>
                        <ajut:ThicknessBuilder BindingParts="Left">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize"/>
                        </ajut:ThicknessBuilder>
                    </ContentControl.Margin>
                </ContentControl>
                <GridSplitter Grid.Column="1" Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=SeparationSize}"
                              HorizontalAlignment="Left" VerticalAlignment="Stretch"
                              Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=SeparatorBrush}">
                    <GridSplitter.Margin>
                        <ajut:ThicknessBuilder BindingParts="Left">
                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="HalfSeparationSize" Converter="{ajc:FixedArithmeticConverter Operation=Multiply, FixedOperand=-1}"/>
                        </ajut:ThicknessBuilder>
                    </GridSplitter.Margin>
                </GridSplitter>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="CONTROLTEMPLATE_TabbedDockZone" TargetType="{x:Type local:DockZone}">
        <DockPanel>
            <!-- Tabs -->
            <local:DockZoneTabHeadersControl x:Name="PanelTabHeaders" DockPanel.Dock="Bottom"
                                             ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=LocallyDockedElements}"
                                             SelectedIndex="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=SelectedIndex, Mode=TwoWay}"
                                             Margin="5,-1,5,0" Panel.ZIndex="1"/>
            <Border x:Name="TabbedBorderRoot"
                    Background="{TemplateBinding PanelBackground}"
                    BorderBrush="{TemplateBinding PanelBorderBrush}" 
                    TextElement.Foreground="{TemplateBinding PanelForeground}">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="BorderThickness" Value="{ajut:TemplateBinding PanelBorderThickness}"/>
                        <Setter Property="CornerRadius" Value="{ajut:TemplateBinding PanelCornerRadius}"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=(docking:DockWindow.IsDockingTearoffWindow)}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=HasParentZone}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="CornerRadius">
                                        <Setter.Value>
                                            <ajut:CornerRadiusBuilder BindingParts="BottomRight,BottomLeft">
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="PanelCornerRadius.BottomRight"/>
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="PanelCornerRadius.BottomLeft"/>
                                            </ajut:CornerRadiusBuilder>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="BorderThickness">
                                        <Setter.Value>
                                            <ajut:ThicknessBuilder BindingParts="Bottom">
                                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type local:DockZone}}" Path="PanelBorderThickness.Bottom"/>
                                            </ajut:ThicknessBuilder>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <DockPanel>
                    <!-- Panel Header -->
                    <Grid DockPanel.Dock="Top">
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=(docking:DockWindow.IsDockingTearoffWindow)}" Value="True"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=HasParentZone}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <local:DockZoneSelectedHeaderControl Target="{Binding ElementName=PanelTabHeaders, Path=SelectedItem.Adapter}"/>
                    </Grid>
                    <!-- Content -->
                    <ContentControl Content="{Binding ElementName=PanelTabHeaders, Path=SelectedItem.Adapter.Display}"/>
                </DockPanel>
            </Border>
        </DockPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="CONTROLTEMPLATE_SingleDockZone" TargetType="{x:Type local:DockZone}">
        <Border x:Name="SingleBorderRoot"
                DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=LocallyDockedElements[0], FallbackValue={x:Null}}"
                Background="{TemplateBinding PanelBackground}"
                BorderBrush="{TemplateBinding PanelBorderBrush}" 
                TextElement.Foreground="{TemplateBinding PanelForeground}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderThickness" Value="{ajut:TemplateBinding PanelBorderThickness}"/>
                    <Setter Property="CornerRadius" Value="{ajut:TemplateBinding PanelCornerRadius}"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=(docking:DockWindow.IsDockingTearoffWindow)}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:DockZone}}, Path=HasParentZone}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="CornerRadius" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <DockPanel>
                <Grid DockPanel.Dock="Top">
                    <local:DockZoneSelectedHeaderControl Target="{Binding .}"/>
                </Grid>
                <ContentControl Content="{Binding Path=Display}"/>
            </DockPanel>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="CONTROLTEMPLATE_Empty" TargetType="{x:Type local:DockZone}">
        <Border Background="{TemplateBinding PanelBackground}"
                BorderBrush="{TemplateBinding PanelBorderBrush}" 
                BorderThickness="{TemplateBinding PanelBorderThickness}"
                TextElement.Foreground="{TemplateBinding PanelForeground}"
                CornerRadius="{TemplateBinding PanelCornerRadius}">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Style.Triggers>
                        <DataTrigger Binding="{ajut:TemplateBinding Path=Manager.IsZoneInDragDropMode}" Value="True">
                            <Setter Property="MinWidth" Value="20"/>
                            <Setter Property="MinHeight" Value="20"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBlock Text="Empty Bro"/>
        </Border>
    </ControlTemplate>
    
    <!-- ===========[ DockZone: Default Style Definition ]======================= -->
    <Style TargetType="{x:Type local:DockZone}">
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="30"/>
        <Setter Property="SeparatorBrush" Value="#01000000"/>
        <Setter Property="SeparationSize" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="PanelBackground" Value="#CCC"/>
        <Setter Property="PanelBorderBrush" Value="Black"/>
        <Setter Property="PanelBorderThickness" Value="1"/>
        <Setter Property="PanelCornerRadius" Value="5"/>
        <Setter Property="PanelForeground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}"/>
        <Setter Property="Template" Value="{StaticResource CONTROLTEMPLATE_Empty}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DockOrientation}" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource CONTROLTEMPLATE_VerticalDockZone}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DockOrientation}" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource CONTROLTEMPLATE_HorizontalDockZone}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DockOrientation}" Value="Tabbed">
                <Setter Property="Template" Value="{StaticResource CONTROLTEMPLATE_TabbedDockZone}"/>
                <Setter Property="MinHeight" Value="60"/>
                <Setter Property="MinWidth" Value="60"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DockOrientation}" Value="Single">
                <Setter Property="Template" Value="{StaticResource CONTROLTEMPLATE_SingleDockZone}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
